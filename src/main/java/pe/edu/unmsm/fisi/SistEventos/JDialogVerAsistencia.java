package pe.edu.unmsm.fisi.SistEventos;

import pe.edu.unmsm.fisi.clases.Deporte;
import pe.edu.unmsm.fisi.clases.Evento;
import pe.edu.unmsm.fisi.clases.ListaDeportes;
import pe.edu.unmsm.fisi.clases.ListaEventos;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class JDialogVerAsistencia extends javax.swing.JDialog {

    private ListaEventos listaEventos;
    private ListaDeportes listaDeportes;
    private DefaultTableModel dtm;
    private DefaultComboBoxModel dcbmDeporte;
    private JDialogPartidosPendientes jDialogPartidosPendientes;

    /**
     * Creates new form jDialogVerAsistencia
     */
    public JDialogVerAsistencia(ListaDeportes listaDeportes) {
        this.listaDeportes = listaDeportes;
        listaEventos = new ListaEventos(listaDeportes);
        initComponents();
        dtm = (DefaultTableModel) jTableAsistencia.getModel();
        llenarComboBox();
        llenarTabla();
    }

    public void llenarTabla() {
        dtm.setRowCount(0);
        int pos = jComboBoxDeporte.getSelectedIndex();
        Deporte d = listaDeportes.getDeporte(pos);
        Object[] o = new Object[2];
        for (int i = 0; i < d.teamsSize(); i++) {
            o[0] = d.getEquipo(i).getPais();
            o[1] = d.getEquipo(i).isAsistio();
            dtm.addRow(o);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        jComboBoxDeporte = new javax.swing.JComboBox();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        jTableAsistencia = new javax.swing.JTable();
        javax.swing.JButton jButtonSiguiente = new javax.swing.JButton();
        javax.swing.JButton jButtonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestor de Eventos");

        jLabel1.setText("Seleccione Deporte:");

        jComboBoxDeporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDeporteActionPerformed(evt);
            }
        });

        jTableAsistencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pais", "Asistencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAsistencia.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableAsistencia);
        if (jTableAsistencia.getColumnModel().getColumnCount() > 0) {
            jTableAsistencia.getColumnModel().getColumn(0).setResizable(false);
            jTableAsistencia.getColumnModel().getColumn(1).setResizable(false);
        }

        jButtonSiguiente.setText("Siguiente >");
        jButtonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxDeporte, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButtonSiguiente)
                .addGap(107, 107, 107))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxDeporte, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalir)
                    .addComponent(jButtonSiguiente))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteActionPerformed
        int pos = jComboBoxDeporte.getSelectedIndex();
        if (!comprobarAsistencia(pos)) {
            JOptionPane.showMessageDialog(this, "No han asistido todos",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            //String deporte = jComboBoxDeporte.getSelectedItem().toString();
            int posDeporte = jComboBoxDeporte.getSelectedIndex();
            String deporte = String.valueOf(jComboBoxDeporte.getSelectedItem());
            int i = listaEventos.get(posDeporte).getEquiposPorCompetencia();
            if (i == 2) {
                Evento e = listaEventos.get(posDeporte);
                e.CalcularPartidosProgramados();
                jDialogPartidosPendientes = new JDialogPartidosPendientes(e);
                jDialogPartidosPendientes.setModalityType(ModalityType.APPLICATION_MODAL);
                jDialogPartidosPendientes.setTitle(deporte);
                jDialogPartidosPendientes.setLocationRelativeTo(this);
                jDialogPartidosPendientes.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "no implementado");
            }
        }
        this.dispose();
    }//GEN-LAST:event_jButtonSiguienteActionPerformed

    private void jComboBoxDeporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDeporteActionPerformed
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_jComboBoxDeporteActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBoxDeporte;
    private javax.swing.JTable jTableAsistencia;
    // End of variables declaration//GEN-END:variables

    public void llenarComboBox() {
        dcbmDeporte = new DefaultComboBoxModel();
        jComboBoxDeporte.setModel(dcbmDeporte);
        for (int i = 0; i < listaEventos.tamanio(); i++) {
            dcbmDeporte.addElement(listaEventos.get(i).getNombreDeporte());
        }
    }

    public boolean comprobarAsistencia(int posDeporte) {
        int cont = 0;
        Deporte d = listaDeportes.getDeporte(posDeporte);
        for (int i = 0; i < d.teamsSize(); i++) {
            if (d.getEquipo(i).isAsistio()) {
                cont++;
            }
        }
        if (cont == 16) {
            return true;
        } else {
            return false;
        }
    }
}
